# Adapted from https://github.com/nathanfranke/gdextension/blob/main/.github/workflows/build.yml
name: Builds
on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: A commit, branch or tag to build.
        type: string
        required: true
  workflow_call:
    inputs:
      git-ref:
        description: A commit, branch or tag to build.
        type: string
        required: true

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.platform }} ${{ matrix.target }} ${{ matrix.arch }} ${{ matrix.optimize }} ${{ matrix.scons_args }}

    env:
      BUILD_ID: ${{ matrix.platform }}-${{ matrix.target }}-${{ matrix.arch }}-${{ matrix.optimize }}-${{ matrix.scons_args }}
      EM_VERSION: 4.0.9
      EM_CACHE_FOLDER: "emsdk-cache"

    strategy:
      fail-fast: false
      matrix:
        target: [ template_debug, template_release ]
        identifier: [ windows, linux, macos, android, android_arm64, web ]

        include:
          # Defaults
          - runner: ubuntu-22.04
          - optimize: speed
          - arch: x86_64
          - scons_args:

          # Debug build settings
          - target: template_debug
            optimize: speed_trace

          # Map identifiers to platforms + special settings
          - identifier: windows
            platform: windows

          - identifier: macos
            platform: macos
            runner: macos-latest
            arch: universal

          - identifier: linux
            platform: linux

          - identifier: android
            platform: android

          - identifier: android_arm64
            platform: android
            arch: arm64

          - identifier: web
            platform: web
            arch: wasm32
            scons_args: threads=no

    steps:
      - name: Check settings
        if: ${{ matrix.platform == '' || matrix.target == '' || matrix.runner == '' || matrix.optimize == '' || matrix.arch == ''}}
        run: |
          echo "One of the matrix values is not set."
          exit 1

      - name: (Windows) Install mingw64
        if: ${{ matrix.platform == 'windows' }}
        shell: sh
        run: |
          sudo apt-get install mingw-w64
          sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix

      - name: (Android) Install JDK 17
        if: ${{ matrix.platform == 'android' }}
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: (Android) Install Android SDK
        if: ${{ matrix.platform == 'android' }}
        uses: android-actions/setup-android@v3

      # From Godot docs, might not be necessary.
      #- name: (Android) Install Android Tools
      #  if: ${{ matrix.platform == 'android' }}
      #  shell: sh
      #  run: |
      #    "$ANDROID_SDK_ROOT"/cmdline-tools/latest/bin/sdkmanager --sdk_root="$ANDROID_SDK_ROOT" "platform-tools" "build-tools;30.0.3" "platforms;android-29" "cmdline-tools;latest" "cmake;3.10.2.4988404"

      - name: (Android) Install NDK r23c
        if: ${{ matrix.platform == 'android' }}
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
          link-to-sdk: true

      - name: (Web) Set up Emscripten cache
        if: ${{ matrix.platform == 'web' }}
        uses: actions/cache@v4
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ env.BUILD_ID }}

      - name: (Web) Set up Emscripten
        if: ${{ matrix.platform == 'web' }}
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons==4.7.0
          scons --version

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          submodules: recursive
          ref: ${{ inputs.git-ref }}

      - name: Scons Cache
        id: scons-cache
        uses: actions/cache@v4
        with:
          path: .scons-cache
          key: ${{ env.BUILD_ID }}

      - name: Compile extension
        shell: sh
        env:
          SCONS_CACHE: .scons-cache
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' optimize=${{ matrix.optimize }} ${{ matrix.scons_args }} -j2
          ls -l demo/addons/*/bin/

      - name: Prepare files for publish
        shell: sh
        run: |
            cp -n '${{ github.workspace }}/README.md' '${{ github.workspace }}/LICENSE' '${{ github.workspace }}/demo/addons/ropesim/'
            rm -rf '${{ github.workspace }}/demo/addons/diagnosticlist'
            rm '${{ github.workspace }}/demo/project.godot'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ env.BUILD_ID }}
          path: |
            ${{ github.workspace }}/demo/
  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Git describe
        id: ghd
        uses: proudust/gh-describe@v2
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: ${{ github.event.repository.name }}-${{ steps.ghd.outputs.describe }}
          pattern: build-*
